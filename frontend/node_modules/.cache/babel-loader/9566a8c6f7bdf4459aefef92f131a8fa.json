{"ast":null,"code":"const BASE_URL = \"/api/users\";\nexport async function signUp(userData) {\n  // Fetch uses an options object as a second arg to make requests\n  // other than basic GET requests, include data, headers, etc.\n  const res = await fetch(BASE_URL, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    // Fetch requires data payloads to be stringified\n    // and assigned to a body property on the options object\n    body: JSON.stringify(userData)\n  });\n\n  // Check if request was successful\n  if (res.ok) {\n    // res.json() will resolve to the JWT\n    return res.json();\n  } else {\n    throw new Error(\"Invalid Sign Up\");\n  }\n}\n\n// Create a function to login\nexport async function login(userData) {\n  // Use the data to make a network request\n  const response = await fetch(`${BASE_URL}/login`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(userData)\n  }).then(response => {\n    return response.json();\n  });\n  console.log(response);\n}","map":{"version":3,"names":["BASE_URL","signUp","userData","res","fetch","method","headers","body","JSON","stringify","ok","json","Error","login","response","then","console","log"],"sources":["/Users/manaraali/Desktop/mern_app/frontend/src/utilities/users-api.js"],"sourcesContent":["const BASE_URL = \"/api/users\";\n\nexport async function signUp(userData) {\n  // Fetch uses an options object as a second arg to make requests\n  // other than basic GET requests, include data, headers, etc.\n  const res = await fetch(BASE_URL, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    // Fetch requires data payloads to be stringified\n    // and assigned to a body property on the options object\n    body: JSON.stringify(userData),\n  });\n\n  // Check if request was successful\n  if (res.ok) {\n    // res.json() will resolve to the JWT\n    return res.json();\n  } else {\n    throw new Error(\"Invalid Sign Up\");\n  }\n}\n\n// Create a function to login\nexport async function login(userData) {\n  // Use the data to make a network request\n  const response = await fetch(`${BASE_URL}/login`, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(userData),\n  }).then((response) => {\n    return response.json();\n  });\n\n  console.log(response);\n}\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,YAAY;AAE7B,OAAO,eAAeC,MAAM,CAACC,QAAQ,EAAE;EACrC;EACA;EACA,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAACJ,QAAQ,EAAE;IAChCK,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/C;IACA;IACAC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,QAAQ;EAC/B,CAAC,CAAC;;EAEF;EACA,IAAIC,GAAG,CAACO,EAAE,EAAE;IACV;IACA,OAAOP,GAAG,CAACQ,IAAI,EAAE;EACnB,CAAC,MAAM;IACL,MAAM,IAAIC,KAAK,CAAC,iBAAiB,CAAC;EACpC;AACF;;AAEA;AACA,OAAO,eAAeC,KAAK,CAACX,QAAQ,EAAE;EACpC;EACA,MAAMY,QAAQ,GAAG,MAAMV,KAAK,CAAE,GAAEJ,QAAS,QAAO,EAAE;IAChDK,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,QAAQ;EAC/B,CAAC,CAAC,CAACa,IAAI,CAAED,QAAQ,IAAK;IACpB,OAAOA,QAAQ,CAACH,IAAI,EAAE;EACxB,CAAC,CAAC;EAEFK,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;AACvB"},"metadata":{},"sourceType":"module"}