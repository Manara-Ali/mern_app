{"ast":null,"code":"import * as usersAPI from \"./users-api\";\nexport async function signUp(userData) {\n  // Make the network request\n  const response = await usersAPI.signUp(userData);\n\n  // Retrieve the token\n  const data = response.data;\n\n  // Add the token to the localstorage\n  localStorage.setItem(\"data\", JSON.stringify(data));\n\n  // Baby step by returning whatever is sent back by the server\n  return response;\n}\n\n// Create a function to login\nexport function login(userData) {\n  // Make a network request\n}\n\n// Create a function to retrieve jwt from local storage\nexport const getToken = () => {\n  var _JSON$parse;\n  // Reach out to local storage and look for a token\n  const token = (_JSON$parse = JSON.parse(localStorage.getItem(\"data\"))) === null || _JSON$parse === void 0 ? void 0 : _JSON$parse.token;\n\n  // console.log(token);\n\n  // Assuming no token was found\n  if (!token) return null;\n\n  // If the function reaches this point of the code that mean a token was found\n  const payload = JSON.parse(atob(token.split(\".\")[1]));\n\n  // Verify that the decoded payload is not expired\n  if (payload.exp < Number.parseInt(Date.now() / 1000)) {\n    // Meaning the jwt has expired\n    localStorage.removeItem(\"data\");\n\n    // return early\n    return null;\n  }\n\n  // Again if the code gets to this line it means that there was a token and the token was valid\n  return token;\n};\nexport const getUser = () => {\n  const token = getToken();\n  return token ? JSON.parse(localStorage.getItem(\"data\")) : null;\n};","map":{"version":3,"names":["usersAPI","signUp","userData","response","data","localStorage","setItem","JSON","stringify","login","getToken","token","parse","getItem","payload","atob","split","exp","Number","parseInt","Date","now","removeItem","getUser"],"sources":["/Users/manaraali/Desktop/mern_app/frontend/src/utilities/users-service.js"],"sourcesContent":["import * as usersAPI from \"./users-api\";\n\nexport async function signUp(userData) {\n  // Make the network request\n  const response = await usersAPI.signUp(userData);\n\n  // Retrieve the token\n  const data = response.data;\n\n  // Add the token to the localstorage\n  localStorage.setItem(\"data\", JSON.stringify(data));\n\n  // Baby step by returning whatever is sent back by the server\n  return response;\n}\n\n// Create a function to login\nexport function login(userData) {\n  // Make a network request\n}\n\n// Create a function to retrieve jwt from local storage\nexport const getToken = () => {\n  // Reach out to local storage and look for a token\n  const token = JSON.parse(localStorage.getItem(\"data\"))?.token;\n\n  // console.log(token);\n\n  // Assuming no token was found\n  if (!token) return null;\n\n  // If the function reaches this point of the code that mean a token was found\n  const payload = JSON.parse(atob(token.split(\".\")[1]));\n\n  // Verify that the decoded payload is not expired\n  if (payload.exp < Number.parseInt(Date.now() / 1000)) {\n    // Meaning the jwt has expired\n    localStorage.removeItem(\"data\");\n\n    // return early\n    return null;\n  }\n\n  // Again if the code gets to this line it means that there was a token and the token was valid\n  return token;\n};\n\nexport const getUser = () => {\n  const token = getToken();\n\n  return token ? JSON.parse(localStorage.getItem(\"data\")) : null;\n};\n"],"mappings":"AAAA,OAAO,KAAKA,QAAQ,MAAM,aAAa;AAEvC,OAAO,eAAeC,MAAM,CAACC,QAAQ,EAAE;EACrC;EACA,MAAMC,QAAQ,GAAG,MAAMH,QAAQ,CAACC,MAAM,CAACC,QAAQ,CAAC;;EAEhD;EACA,MAAME,IAAI,GAAGD,QAAQ,CAACC,IAAI;;EAE1B;EACAC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACJ,IAAI,CAAC,CAAC;;EAElD;EACA,OAAOD,QAAQ;AACjB;;AAEA;AACA,OAAO,SAASM,KAAK,CAACP,QAAQ,EAAE;EAC9B;AACF;;AAEA;AACA,OAAO,MAAMQ,QAAQ,GAAG,MAAM;EAAA;EAC5B;EACA,MAAMC,KAAK,kBAAGJ,IAAI,CAACK,KAAK,CAACP,YAAY,CAACQ,OAAO,CAAC,MAAM,CAAC,CAAC,gDAAxC,YAA0CF,KAAK;;EAE7D;;EAEA;EACA,IAAI,CAACA,KAAK,EAAE,OAAO,IAAI;;EAEvB;EACA,MAAMG,OAAO,GAAGP,IAAI,CAACK,KAAK,CAACG,IAAI,CAACJ,KAAK,CAACK,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;EAErD;EACA,IAAIF,OAAO,CAACG,GAAG,GAAGC,MAAM,CAACC,QAAQ,CAACC,IAAI,CAACC,GAAG,EAAE,GAAG,IAAI,CAAC,EAAE;IACpD;IACAhB,YAAY,CAACiB,UAAU,CAAC,MAAM,CAAC;;IAE/B;IACA,OAAO,IAAI;EACb;;EAEA;EACA,OAAOX,KAAK;AACd,CAAC;AAED,OAAO,MAAMY,OAAO,GAAG,MAAM;EAC3B,MAAMZ,KAAK,GAAGD,QAAQ,EAAE;EAExB,OAAOC,KAAK,GAAGJ,IAAI,CAACK,KAAK,CAACP,YAAY,CAACQ,OAAO,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI;AAChE,CAAC"},"metadata":{},"sourceType":"module"}